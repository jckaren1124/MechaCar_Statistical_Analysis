load("C:/Users/jckar/Desktop/ucd-virt-data-pt-09-2021-u-b/03-Lesson-Plans/15-R/1/Activities/01_Ins_RBasics/Solved/.RData")
demo()
#MODULE 15.6.1
#visualize distribution of driven miles for entire population dataset
#import used car dataset
population_table <- read.csv('used_car_data.csv',check.names = F,stringsAsFactors = F)
#MODULE 15.6.1
#visualize distribution of driven miles for entire population dataset
#import used car dataset
population_table <- read.csv('used_car_data.csv',check.names = F,stringsAsFactors = F)
#MODULE 15.6.1
#visualize distribution of driven miles for entire population dataset
#import used car dataset
population_table <- read.csv('used_car_data.csv',check.names = F,stringsAsFactors = F)
#MODULE 15.6.1
#visualize distribution of driven miles for entire population dataset
#import used car dataset
population_table <- read.csv('used_car_data.csv',check.names = F,stringsAsFactors = F)
setwd("~/01-Demo")
#MODULE 15.6.1
#visualize distribution of driven miles for entire population dataset
#import used car dataset
population_table <- read.csv('used_car_data.csv',check.names = F,stringsAsFactors = F)
#import dataset into ggplot2
plt <- ggplot(population_table,aes(x=log10(Miles_Driven)))
setwd("~/")
#MODULE 15.6.1
#visualize distribution of driven miles for entire population dataset
#import used car dataset
population_table <- read.csv('used_car_data.csv',check.names = F,stringsAsFactors = F)
#import dataset into ggplot2
plt <- ggplot(population_table,aes(x=log10(Miles_Driven)))
#MODULE 15.1.3
install.packages("tidyverse")
install.packages("jsonlite")
#MODULE 15.6.1
#visualize distribution of driven miles for entire population dataset
#import used car dataset
population_table <- read.csv('used_car_data.csv',check.names = F,stringsAsFactors = F)
#import dataset into ggplot2
plt <- ggplot(population_table,aes(x=log10(Miles_Driven)))
#to facet the previous example by fuel-efficiency type
#import dataset into ggplot2
plt <- ggplot(mpg_long,aes(x=manufacturer,y=Rating,color=MPG_Type))
?ggplot()
library(ggplot)
install.packages(ggplot)
library(ggplot2)
#MODULE 15.6.1
#visualize distribution of driven miles for entire population dataset
#import used car dataset
population_table <- read.csv('used_car_data.csv',check.names = F,stringsAsFactors = F)
#MODULE 15.6.1
#visualize distribution of driven miles for entire population dataset
#import used car dataset
population_table <- read.csv('used_car_data.csv',check.names = F,stringsAsFactors = F)
#MODULE 15.6.1
#visualize distribution of driven miles for entire population dataset
#import used car dataset
population_table <- read.csv('used_car_data.csv',check.names = F,stringsAsFactors = F)
#import dataset into ggplot2
plt <- ggplot(population_table,aes(x=log10(Miles_Driven)))
#visualize distribution using density plot
plt + geom_density()
#randomly sample 50 data points
sample_table <- population_table %>% sample_n(50)
#converting mpg dataset to long format
mpg_long <- mpg %>% gather(key="MPG_Type",value="Rating",c(cty,hwy))
#converting mpg dataset to long format
mpg_long <- mpg %>% gather(key="MPG_Type",value="Rating",c(cty,hwy))
#MODULE 15.1.3
install.packages("tidyverse")
#MODULE 15.3.1
library(ggplot2)
#randomly sample 50 data points
sample_table <- population_table %>% sample_n(50)
#MODULE 15.2.5
library(tidyverse)
#randomly sample 50 data points
sample_table <- population_table %>% sample_n(50)
#randomly sample 50 data points
sample_table <- population_table %>% sample_n(50)
#import dataset into ggplot2 using log10 to make mileage data more normal
plt <- ggplot(sample_table,aes(x=log10(Miles_Driven)))
#visualize distribution using density plot
plt + geom_density()
#MODULE 15.6.3
#generate 50 randomly sampled data points
sample_table <- population_table %>% sample_n(50)
#generate another 50 randomly sampled data points
sample_table2 <- population_table %>% sample_n(50)
#compare means of two samples
t.test(log10(sample_table$Miles_Driven),log10(sample_table2$Miles_Driven))
#MODULE 15.6.4
#import dataset
mpg_data <- read.csv('mpg_modified.csv')
#select only data points where the year is 1999
mpg_1999 <- mpg_data %>% filter(year==1999)
#select only data points where the year is 2008
mpg_2008 <- mpg_data %>% filter(year==2008)
#compare the mean difference between two samples
t.test(mpg_1999$hwy,mpg_2008$hwy,paired = T)
?aov()
#MODULE 15.6.5
#filter columns from mtcars dataset
mtcars_filt <- mtcars[,c("hp","cyl")]
#convert numeric column to factor (categorial variable)
mtcars_filt$cyl <- factor(mtcars_filt$cyl)
View(mtcars_filt)
#compare means across multiple levels
aov(hp ~ cyl,data=mtcars_filt)
#include p-values
summary(aov(hp ~ cyl,data=mtcars_filt))
?factor()
#MODULE 15.7.1
head(mtcars)
#import dataset into ggplot2
plt <- ggplot(mtcars,aes(x=hp,y=qsec))
#create scatter plot
plt + geom_point()
#calculate correlation coefficient
cor(mtcars$hp,mtcars$qsec)
#read in dataset
used_cars <- read.csv('used_car_data.csv',stringsAsFactors = F)
head(used_cars)
#import dataset into ggplot2
plt <- ggplot(used_cars,aes(x=Miles_Driven,y=Selling_Price))
#create a scatter plot
plt + geom_point()
#calculate correlation coefficient
cor(used_cars$Miles_Driven,used_cars$Selling_Price)
#correlation matrix
#convert data frame into numeric matrix
used_matrix <- as.matrix(used_cars[,c("Selling_Price","Present_Price","Miles_Driven")])
View(used_matrix)
cor(used_matrix)
#MODULE 15.7.2
?1m()
#MODULE 15.7.2
?lm()
#create linear model
lm(qsec ~ hp,mtcars)
#summarize linear model
summary(lm(qsec~hp,mtcars))
#generate the fitted line against scatter plot
#create linear model
model <- lm(qsec ~ hp,mtcars)
#determine y-axis values from linear model
yvals <- model$coefficients['hp']*mtcars$hp + model$coefficients['(Intercept)']
#import dataset into ggplot2
plt <- ggplot(mtcars,aes(x=hp,y=qsec))
#plot scatter and linear model
plt + geom_point() + geom_line(aes(y=yvals), color = "red")
#MODULE 15.7.3
#generate multiple linear regression model
lm(qsec ~ mpg + disp + drat + wt + hp,data=mtcars)
#generate summary statistics
summary(lm(qsec ~ mpg + disp + drat + wt + hp,data=mtcars))
#MODULE 15.8.1
#generate contingency table
table(mpg$class,mpg$year)
#generate contingency table with a name
tbl <- table(mpg$class,mpg$year)
#compare categorical distributions
chisq.test(tbl)
#DELIVERABLE 1
#1. download MechaCar_mpg.csv file
MechaCar_mpg <- read.csv('Challenge 15'/'MechaCar_mpg')
View(sample_table)
#DELIVERABLE 1
#1. download MechaCar_mpg.csv file
MechaCar_mpg <- read.csv('Challenge 15'/'MechaCar_mpg.csv')
setwd("~/Challenge 15")
#DELIVERABLE 1
#1. download MechaCar_mpg.csv file
MechaCar_mpg <- read.csv('MechaCar_mpg.csv')
#2.create new RScript
#3.download dplyr package
library(dplyr)
View(MechaCar_mpg)
#6.calculate summary statistics
?lm()
#5.perform linear regression with all 6 variables
lm(mpg ~ vehicle_length + vehicle_weight + spoiler_angle + ground_clearance + AWD, data=MechaCar_mpg)
#6.calculate summary statistics
summary(lm(mpg ~ vehicle_length + vehicle_weight + spoiler_angle + ground_clearance + AWD, data=MechaCar_mpg))
